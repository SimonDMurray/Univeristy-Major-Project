{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "healthy-corner",
   "metadata": {},
   "source": [
    "Need to ensure that MCL clusters are viewed in cellxgene as categorical and not continuous, so a singular alteration to h5ad is needed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aerial-temple",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scanpy as sc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "revised-planner",
   "metadata": {},
   "outputs": [],
   "source": [
    "ADT_adata = sc.read_h5ad(\"ADT_seurat_analysis_output/integrated_anndata/ADT.h5ad\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "commercial-psychiatry",
   "metadata": {},
   "outputs": [],
   "source": [
    "ADT_adata.obs['MCL_clustering'] = ADT_adata.obs['MCL_clustering'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "unusual-surgery",
   "metadata": {},
   "outputs": [],
   "source": [
    "ADT_adata.write_h5ad(\"ADT_seurat_analysis_output/integrated_anndata/categorical_ADT.h5ad\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "pacific-grammar",
   "metadata": {},
   "outputs": [],
   "source": [
    "RNA_adata = sc.read_h5ad(\"RNA_seurat_analysis_output/integrated_anndata/RNA.h5ad\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "destroyed-california",
   "metadata": {},
   "outputs": [],
   "source": [
    "RNA_adata.obs['MCL_clustering'] = RNA_adata.obs['MCL_clustering'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "center-forum",
   "metadata": {},
   "outputs": [],
   "source": [
    "RNA_adata.write_h5ad(\"RNA_seurat_analysis_output/integrated_anndata/categorical_RNA.h5ad\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
